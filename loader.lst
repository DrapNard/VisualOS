     1                                  [BITS 16]
     2                                  ORG 0x7C00
     3                                  
     4                                  start:
     5 00000000 FA                          cli                     ; Disable interrupts
     6 00000001 31C0                        xor ax, ax
     7 00000003 8ED8                        mov ds, ax              ; Clear segment registers
     8 00000005 8EC0                        mov es, ax
     9 00000007 8ED0                        mov ss, ax
    10 00000009 BC007C                      mov sp, 0x7C00          ; Initialize stack
    11                                  
    12                                      ; Print debug message
    13 0000000C B40E                        mov ah, 0x0E
    14 0000000E B042                        mov al, 'B'
    15 00000010 CD10                        int 0x10
    16                                  
    17                                      ; Load GDT
    18 00000012 0F0116[5800]                lgdt [gdt_descriptor]
    19                                  
    20                                      ; Enable protected mode
    21 00000017 0F20C0                      mov eax, cr0
    22 0000001A 6683C801                    or eax, 1
    23 0000001E 0F22C0                      mov cr0, eax
    24                                  
    25                                      ; Far jump to protected mode
    26 00000021 EA[2600]0800                jmp 0x08:protected_mode
    27                                  
    28                                  [BITS 32]
    29                                  protected_mode:
    30                                      ; Set data segments
    31 00000026 66B81000                    mov ax, 0x10
    32 0000002A 8ED8                        mov ds, ax
    33 0000002C 8EC0                        mov es, ax
    34 0000002E 8EE0                        mov fs, ax
    35 00000030 8EE8                        mov gs, ax
    36 00000032 8ED0                        mov ss, ax
    37 00000034 BC009C0000                  mov esp, 0x9C00
    38                                  
    39                                      ; Print debug message
    40 00000039 B40E                        mov ah, 0x0E
    41 0000003B B050                        mov al, 'P'
    42 0000003D CD10                        int 0x10
    43                                  
    44                                      ; Halt the CPU
    45 0000003F F4                          hlt
    46                                  
    47                                  gdt:
    48 00000040 0000000000000000            dq 0x0000000000000000   ; Null descriptor
    49 00000048 FFFF0000009ACF00            dq 0x00CF9A000000FFFF   ; Code segment descriptor
    50 00000050 FFFF00000092CF00            dq 0x00CF92000000FFFF   ; Data segment descriptor
    51                                  
    52                                  gdt_descriptor:
    53 00000058 1D00                        dw gdt_end - gdt - 1
    54 0000005A [40000000]                  dd gdt
    55                                  
    56                                  gdt_end:
